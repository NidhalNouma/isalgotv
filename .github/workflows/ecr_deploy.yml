name: Build and Deploy Django App to AWS ECS

on:
  push:
    branches:
      - main # Adjust this to your branch

# Setup a new IAM role to be able on AWS

env:
  AWS_ACCOUNT_ID: 358776226602 # Set your AWS account ID
  AWS_REGION: eu-central-1 # Set your AWS region here
  ECR_REPOSITORY: isalgo # Set your ECR repository name here
  # ECS_CLUSTER: isalgo_test_ecs_cluster # Set your ECS cluster name here
  ECS_CLUSTER: isalgo_live # Set your ECS cluster name here
  ECS_SERVICE: isalgo_live_ecs_service # Set your ECS service name here

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          submodules: recursive
          ssh-key: ${{ secrets.TERO_DEPLOY_KEY }}

      - name: Install AWS CLI
        run: |
          if [ -d "/usr/local/aws-cli/v2/current" ]; then
            echo "Updating existing AWS CLI installation."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip -o awscliv2.zip
            sudo ./aws/install --update
          else
            echo "Installing AWS CLI."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          fi

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ env.AWS_REGION }}

      - name: Create ECR Repository if it doesn't exist
        run: |
          if ! aws ecr describe-repositories --repository-names ${{ env.ECR_REPOSITORY }}; then
            aws ecr create-repository --repository-name ${{ env.ECR_REPOSITORY }}
          fi

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com

      - name: Build and Push to ECR
        run: |
          IMAGE_TAG=latest
          ECR_URI=${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.ECR_REPOSITORY }}
          docker build \
          --build-arg SECRET_KEY="${{ secrets.SECRET_KEY }}" \
          --build-arg EMAIL_HOST_USER="${{ secrets.EMAIL_HOST_USER }}" \
          --build-arg EMAIL_HOST_PASSWORD="${{ secrets.EMAIL_HOST_PASSWORD }}" \
          --build-arg STRIPE_API_KEY="${{ secrets.STRIPE_API_KEY }}" \
          --build-arg STRIPE_API_PUBLIC_KEY="${{ secrets.STRIPE_API_PUBLIC_KEY }}" \
          --build-arg STRIPE_API_WEBHOOK_SECRET="${{ secrets.STRIPE_API_WEBHOOK_SECRET }}" \
          --build-arg STRIPE_PRICE_MN_ID="${{ secrets.STRIPE_PRICE_MN_ID }}" \
          --build-arg STRIPE_PRICE_3MN_ID="${{ secrets.STRIPE_PRICE_3MN_ID }}" \
          --build-arg STRIPE_PRICE_Y_ID="${{ secrets.STRIPE_PRICE_Y_ID }}" \
          --build-arg STRIPE_PRICE_LT_ID="${{ secrets.STRIPE_PRICE_LT_ID }}" \
          --build-arg STRIPE_AUTOMATE_PRICE_ID_CRYPTO="${{ secrets.STRIPE_AUTOMATE_PRICE_ID_CRYPTO }}" \
          --build-arg STRIPE_AUTOMATE_PRICE_ID_FOREX="${{ secrets.STRIPE_AUTOMATE_PRICE_ID_FOREX }}" \
          --build-arg STRIPE_AUTOMATE_PRICE_ID_METATRADER="${{ secrets.STRIPE_AUTOMATE_PRICE_ID_METATRADER }}" \
          --build-arg DATABASE_HOST="${{ secrets.DATABASE_HOST }}" \
          --build-arg DATABASE_NAME="${{ secrets.DATABASE_NAME }}" \
          --build-arg DATABASE_USER="${{ secrets.DATABASE_USER }}" \
          --build-arg DATABASE_PASS="${{ secrets.DATABASE_PASS }}" \
          --build-arg AWS_ACCESS_KEY_ID="${{ secrets.AWS_ACCESS_KEY_ID }}" \
          --build-arg AWS_SECRET_ACCESS_KEY="${{ secrets.AWS_SECRET_ACCESS_KEY }}" \
          --build-arg AWS_STORAGE_BUCKET_NAME="${{ secrets.AWS_STORAGE_BUCKET_NAME }}" \
          --build-arg TV_SESSION_ID="${{ secrets.TV_SESSION_ID }}" \
          --build-arg META_API_TOKEN="${{ secrets.META_API_TOKEN }}" \
          --build-arg DISCORD_BOT_ACCESS_TOKEN="${{ secrets.DISCORD_BOT_ACCESS_TOKEN }}" \
          --build-arg OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}" \
          --build-arg REDIS_ENDPOINT="${{ secrets.REDIS_ENDPOINT }}" \
          --build-arg FREE_TRIAL_DAYS="${{ secrets.FREE_TRIAL_DAYS }}" \
          --build-arg WEBHOOK_SERVER_IP="${{ secrets.WEBHOOK_SERVER_IP }}" \
          --build-arg COUPON_CODE="${{ secrets.COUPON_CODE }}" \
          --build-arg COUPON_OFF="${{ secrets.COUPON_OFF }}" \
            -t $ECR_URI:$IMAGE_TAG .
          docker tag $ECR_URI:$IMAGE_TAG $ECR_URI:$IMAGE_TAG
          docker push $ECR_URI:$IMAGE_TAG
