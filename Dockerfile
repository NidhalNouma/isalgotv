# Use an official Python runtime as a parent image
FROM python:3.13.3

# Set arguments
ARG SECRET_KEY

ARG EMAIL_HOST_USER
ARG EMAIL_HOST_PASSWORD

ARG STRIPE_API_KEY
ARG STRIPE_API_PUBLIC_KEY
ARG STRIPE_API_WEBHOOK_SECRET

ARG STRIPE_PRICE_MN_ID
ARG STRIPE_PRICE_3MN_ID
ARG STRIPE_PRICE_Y_ID
ARG STRIPE_PRICE_LT_ID

ARG STRIPE_AUTOMATE_PRICE_ID_CRYPTO
ARG STRIPE_AUTOMATE_PRICE_ID_FOREX
ARG STRIPE_AUTOMATE_PRICE_ID_METATRADER


ARG DATABASE_HOST
ARG DATABASE_NAME
ARG DATABASE_USER
ARG DATABASE_PASS

ARG AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ARG AWS_STORAGE_BUCKET_NAME

ARG TV_SESSION_ID
ARG META_API_TOKEN

ARG DISCORD_BOT_ACCESS_TOKEN

ARG AI_KEY
ARG FIREBASE_KEY

ARG REDIS_ENDPOINT

ARG FREE_TRIAL_DAYS

ARG WEBHOOK_SERVER_IP

ARG COUPON_CODE
ARG COUPON_OFF

# Set environment variables
ENV DJANGO_SETTINGS_MODULE etradingview.settings.prod
ENV SECRET_KEY ${SECRET_KEY}

ENV EMAIL_HOST_USER ${EMAIL_HOST_USER}
ENV EMAIL_HOST_PASSWORD ${EMAIL_HOST_PASSWORD}

ENV STRIPE_API_KEY ${STRIPE_API_KEY}
ENV STRIPE_API_PUBLIC_KEY ${STRIPE_API_PUBLIC_KEY}
ENV STRIPE_API_WEBHOOK_SECRET ${STRIPE_API_WEBHOOK_SECRET}

ENV STRIPE_PRICE_MN_ID ${STRIPE_PRICE_MN_ID}
ENV STRIPE_PRICE_3MN_ID ${STRIPE_PRICE_3MN_ID}
ENV STRIPE_PRICE_Y_ID ${STRIPE_PRICE_Y_ID}
ENV STRIPE_PRICE_LT_ID ${STRIPE_PRICE_LT_ID}

ENV STRIPE_AUTOMATE_PRICE_ID_CRYPTO ${STRIPE_AUTOMATE_PRICE_ID_CRYPTO}
ENV STRIPE_AUTOMATE_PRICE_ID_FOREX ${STRIPE_AUTOMATE_PRICE_ID_FOREX}
ENV STRIPE_AUTOMATE_PRICE_ID_METATRADER ${STRIPE_AUTOMATE_PRICE_ID_METATRADER}

ENV DATABASE_HOST ${DATABASE_HOST}
ENV DATABASE_NAME ${DATABASE_NAME}
ENV DATABASE_USER ${DATABASE_USER}
ENV DATABASE_PASS ${DATABASE_PASS}

ENV AWS_ACCESS_KEY_ID ${AWS_ACCESS_KEY_ID}
ENV AWS_SECRET_ACCESS_KEY ${AWS_SECRET_ACCESS_KEY}
ENV AWS_STORAGE_BUCKET_NAME ${AWS_STORAGE_BUCKET_NAME}

ENV TV_SESSION_ID ${TV_SESSION_ID}
ENV META_API_TOKEN ${META_API_TOKEN}
ENV DISCORD_BOT_ACCESS_TOKEN ${DISCORD_BOT_ACCESS_TOKEN}

ENV AI_KEY ${AI_KEY}
ENV FIREBASE_KEY ${FIREBASE_KEY}

ENV REDIS_ENDPOINT ${REDIS_ENDPOINT}

ENV FREE_TRIAL_DAYS ${FREE_TRIAL_DAYS}

ENV WEBHOOK_SERVER_IP ${WEBHOOK_SERVER_IP}

ENV COUPON_CODE ${COUPON_CODE}
ENV COUPON_OFF ${COUPON_OFF}

# Set work directory
WORKDIR /usr/src/app

# Install dependencies
COPY requirements.txt /usr/src/app/

RUN pip install --no-cache-dir -r requirements.txt

#install tradelocker independently
RUN pip install tradelocker

# Copy project
COPY . /usr/src/app/

# Collect static files
RUN python manage.py collectstatic --noinput --clear

# Compress for tailwindcss build
RUN python manage.py compress

# Run migrate
RUN python manage.py migrate --noinput

# Expose port 8000
EXPOSE 8000


CMD ["gunicorn", "etradingview.asgi:application", \
     "-k", "uvicorn.workers.UvicornWorker", \
     "-w", "6", \
     "--bind", "0.0.0.0:8000", \
     "--access-logfile", "-", "--error-logfile", "-"]

# For async-heavy apps
# CMD ["gunicorn", "--bind", "0.0.0.0:8000", "etradingview.wsgi:application", " -w", "4", "-k", "uvicorn.workers.UvicornWorker", "--access-logfile", "-", "--error-logfile", "-"]



